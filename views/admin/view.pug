extends ../wrapper

block content
	- let back = mountpoint + '/' + admin.name;
	if admin.options.parent
		- back = mountpoint + '/' + admin.options.parent.table + '/' + row[admin.options.parent.fk]

	.admin-container
		.admin.clear-fix.mdc-elevation--z1
			div(data-jsclass="adminController" data-mountpoint= mountpoint data-model= admin.name data-id= row.id data-redirect= back)
				.page-header
					h2
						a(href= back)
							i.material-icons arrow_back_ios
						= admin.name + ' table'
						.pull-right
							button.mdc-button.add-button
								i.material-icons add_circle
					
				.page-content
					.admin-form
						.button-bar.pull-right
							p
								button.mdc-button.edit-button
									i.material-icons edit
									
								if canDelete
									button.mdc-button.delete-button
										i.material-icons delete_forever
								
						.flextable(data-jsclass="flexTable" data-break="screen-xsmall,screen-small")
							ul
								li
								li
							ul
								li.label
									= 'row'
									ul
										li= row.id
										
								if fk
									li.label
										= fk
										ul
											li.data!= admin.getColumn(fk).getDisplayValue(row,prepared[fk])
										
								for property in admin.options.viewColumns
									if property !== fk
										li.label
											= property
											ul
												li.data!= admin.getColumn(property).getDisplayValue(row,prepared[property])
						
						if !admin.options.skipReferences
							// belongs to many relationships (through tables)
							for manyThrough in admin.options.hasManyThrough
								if manyThroughs[manyThrough.as].rows.length
									p= manyThrough.as
									.mdc-chip-set
										for through in manyThroughs[manyThrough.as].rows
											.mdc-chip
												.mdc-chip__ripple
												span.mdc-chip__text= through.description
							
							// has many relationships
							for dependant in dependants
								p
									button.mdc-button.add-button(data-target= dependant.table data-fk= dependant.fk data-belongs-to= row.id)
										i.material-icons add_circle
									
									= dependant.table + ' (' + dependant.rows.count + ' rows)'
								
								table
									for rel in dependant.rows.rows
										tr
											td
												- let relAdmin = adminTables[dependant.table]
												a(href= mountpoint + '/' + dependant.table + '/' + rel.id)= rel[relAdmin.options.defaultColumn]
	//
		p ManyThroughs
		pre= JSON.stringify(manyThroughs,"",2)
		
		p Dependants
		pre= JSON.stringify(dependants,"",2)

		p Dependants
		pre= JSON.stringify(dependants,"",2)

		p References:
		pre= JSON.stringify(references,"",2)
		
		p Associations
		pre= JSON.stringify(assoc,"",2)
		
		p Options
		pre= JSON.stringify(admin.options,"",2)
